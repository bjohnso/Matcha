<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/css/materialize.min.css">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css" integrity="sha384-oS3vJWv+0UjzBfQzYUhtDYW+Pj2yciDJxpsK1OYPAYjqT085Qq/1cq5FLXAZQ7Ay" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/styles.css">

    <!-- Theme included stylesheets -->
    <link href="//cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <link href="//cdn.quilljs.com/1.3.6/quill.bubble.css" rel="stylesheet">

    <!-- Main Quill library -->
    <script src="//cdn.quilljs.com/1.3.6/quill.js"></script>
    <script src="//cdn.quilljs.com/1.3.6/quill.min.js"></script>

    <!-- JQuery -->
    <script src="https://code.jquery.com/jquery-3.4.1.js" integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/js/materialize.min.js"></script>
    <title>Matcha</title>
</head>
<body>
    {{>_header}}
    {{>_msg}}
    <main>
        {{{body}}}
    </main>

    <script>
        var httpAPI = new XMLHttpRequest();
        var urlAPI = 'https://www.googleapis.com/geolocation/v1/geolocate?key=AIzaSyDBelS4b_53qBFkXKPfHQ-TBTRYvFm-x6w';
        httpAPI.open('POST', urlAPI, true);

        httpAPI.setRequestHeader('Content-Type', 'application/json');

        httpAPI.onreadystatechange = function(){
            if (httpAPI.readyState == 4 && httpAPI.status == 200){
                var httpServer = new XMLHttpRequest();
                var urlServer = `http://localhost:5000/auth/google/gps`;
                var paramServer = JSON.stringify({
                    gps : httpAPI.responseText
                })
                console.log(httpAPI.responseText);
                httpServer.open('POST', urlServer, true);
                httpServer.setRequestHeader('Content-Type', 'application/json');

                httpServer.onreadystatechange = function(){
                    if (httpServer.readyState == 4 && httpServer.status == 200){
                        console.log("Successfuly sent gps");
                    }
                }

                httpServer.send(paramServer);
            }
        }
        httpAPI.send();

        const imageUpload = document.getElementById("imageUpload");
        const imageUploadButton = document.getElementById("imageUploadButton");

        imageUploadButton.addEventListener("click", ()=> {
            imageUpload.click();
        })

        imageUpload.onchange = function() {
            var files = imageUpload.files;
            var finalFiles = [];
            if (files.length != 0){
                for (file of files){
                    if (isFileImage(file)){
                        finalFiles.push(file);
                    }
                }
            }

            if (finalFiles.length != 0){
                var formData = new FormData();
                //for (file of finalFiles){
                    const fileName = file.name;
                    const reader = new FileReader();
                    reader.readAsDataURL(finalFiles[0]);
                    reader.onload = event => {
                        const img = new Image();
                        img.src = event.target.result;
                        img.onload = () => {
                            const elem = document.createElement('canvas');
                            elem.width = 639;
                            elem.height = 639;
                            const ctx = elem.getContext('2d');
                            ctx.drawImage(img, 0, 0, 639, 639);
                            ctx.canvas.toBlob((blob) => {
                                const file = new File([blob], fileName, {
                                    type: 'image/jpeg',
                                    lastModified: Date.now()
                                });
                                //formData.append('image', blob, fileName);
                                formData.append('image', file);
                                var httpAPI = new XMLHttpRequest();
                                var urlServer = "http://localhost:5000/user/upload/image";
                                httpAPI.open('POST', urlServer, true);
                                //httpAPI.setRequestHeader('Content-Type', 'multipart/form-data');
                                httpAPI.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                                httpAPI.onreadystatechange = function(){
                                    if (httpAPI.readyState == 4 && httpAPI.status == 200){
                                        console.log("sent");
                                    }
                                }
                                httpAPI.send(formData);
                            }, 'image/jpeg', 1);
                        },
                        reader.onerror = error => console.log(error);
                    }
                //}
        }
        }

        function isFileImage(file){
            const acceptedImageTypes = ['image/jpeg', 'image/png'];
            return file && acceptedImageTypes.includes(file['type']);
        }

        $(document).ready(() => {
            $('.datepicker').pickadate({
                min: [1900,1,1],
                max: [2050,12,31],
                selectMonths: true, // Creates a dropdown to control month
                selectYears: 150,
                today: 'Today',
                clear: 'Clear',
                close: 'Ok',
                closeOnSelect: true // Close upon selecting a date,
            }).on('mousedown', (event)=> {
                event.preventDefault();
            });
            $('select').material_select({"stopPropagation":true})
            .on('mousedown', (event) => {
                event.preventDefault();
            });
            $('.button-collapse').sideNav();
            $('.tabs').tabs();
        });

    </script>
</body>
</html>